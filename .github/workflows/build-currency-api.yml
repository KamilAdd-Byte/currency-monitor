# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Java CI with Maven

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Check out repository
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'zulu'
          cache: maven

      - name: Build with Maven
        run: mvn clean install

      - name: Run Tests
        run: mvn test

      - name: Upload artifact for deployment job
        uses: actions/upload-artifact@v2
        with:
          name: java-app
          path: ${{ github.workspace }}/target/*.jar

      - name: Notify on Discord
        if: always()
        env:
          DISCORD_WEBHOOK_URL: ${{ secrets.DISCORD_WEBHOOK_URL }}
        run: |
          STATUS=$([[ ${{ job.status }} == 'success' ]] && echo 'Succeeded' || echo 'Failed')
          COMMIT_INFO=$(git log -1 --pretty=format:"%h - %an, %ae%nDate: %cd%n%s")
          FILE_CHANGES=$(git diff --name-only ${{ github.event.before }} ${{ github.sha }} | wc -l)
          MESSAGE="{\"content\": \"Build $STATUS: ${{ github.repository }}@${{ github.ref }} Commit: ${{ github.sha }} by ${{ github.actor }}\nCommit info:\n$COMMIT_INFO\nChanged files: $FILE_CHANGES\"}"
          ENCODED_MESSAGE=$(echo "$MESSAGE" | jq -Rs .)
          curl -H "Content-Type: application/json" \
               -d "$ENCODED_MESSAGE" \
               $DISCORD_WEBHOOK_URL